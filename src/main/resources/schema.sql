drop table if exists film_genres;
drop table if exists friendship;
drop table if exists likes;
drop table if exists users;
drop table if exists films;
drop table if exists genres;
drop table if exists mpas;

create table if not exists mpas
(
    id   int generated by default as identity primary key,
    name varchar not null unique
);

create table if not exists films
(
    id           int generated by default as identity primary key,
    name         varchar(255) not null,
    description  varchar(200),
    release_date date,
    duration     int,
    rate         int,
    mpa_id       int,

    foreign key (mpa_id) references mpas (id) on delete cascade
);

create table if not exists users
(
    id       int generated by default as identity primary key,
    email    varchar(255) not null,
    login    varchar(255) not null,
    name     varchar(255),
    birthday date         not null
);

create table if not exists genres
(
    id   int generated by default as identity primary key,
    name varchar(100) not null unique
);

create table if not exists film_genres
(
    film_id       int,
    film_genre_id int,
    foreign key (film_genre_id) references genres (id) on delete cascade,
    foreign key (film_id) references films (id) on delete cascade,
    primary key (film_id, film_genre_id)
);

create table if not exists likes
(
    user_id int,
    film_id int,
    primary key (film_id, user_id),
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (user_id) references users (id) on delete cascade
);

create table if not exists friendship
(
    user_id   int,
    friend_id int,
    foreign key (user_id) references users (id) on delete cascade,
    foreign key (friend_id) references users (id) on delete cascade,
    primary key (user_id, friend_id)
);
